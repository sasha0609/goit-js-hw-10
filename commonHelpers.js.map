{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n// import someFunction from './2-snackbar.js';\n// someFunction();\n\nconst btn = document.querySelector('[type=\"button\"]');\nconst input = document.querySelector('#datetime-picker');\nconst value = document.querySelectorAll('.value');\nlet userSelectedDate = [];\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    userSelectedDate = selectedDates[0];\n    if (selectedDates[0] < new Date()) {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: 'Please choose date in the future',\n      });\n      btn.disabled = true;\n    } else {\n      btn.disabled = false;\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nflatpickr('#datetime-picker', options);\n\nbtn.addEventListener('click', event => {\n  const repeatTime = setInterval(() => {\n    event.preventDefault();\n    let timeBeforeDate = userSelectedDate - new Date();\n    input.disabled = true;\n\n    if (timeBeforeDate < 1) {\n      btn.disabled = true;\n      input.disabled = false;\n      clearInterval(repeatTime);\n      return;\n    }\n    const timer = convertMs(timeBeforeDate);\n\n    value[0].innerText = timer.days.toString().padStart(2, '0');\n    value[1].innerText = timer.hours.toString().padStart(2, '0');\n    value[2].innerText = timer.minutes.toString().padStart(2, '0');\n    value[3].innerText = timer.seconds.toString().padStart(2, '0');\n  }, 1000);\n});\n"],"names":["btn","input","value","userSelectedDate","options","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","flatpickr","event","repeatTime","timeBeforeDate","timer"],"mappings":"+IAOA,MAAMA,EAAM,SAAS,cAAc,iBAAiB,EAC9CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAQ,SAAS,iBAAiB,QAAQ,EAChD,IAAIC,EAAmB,CAAA,EAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BF,EAAmBE,EAAc,CAAC,EAC9BA,EAAc,CAAC,EAAI,IAAI,MACzBC,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,kCACjB,CAAO,EACDN,EAAI,SAAW,IAEfA,EAAI,SAAW,EAElB,CACH,EAEA,SAASO,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAMAC,EAAU,mBAAoBT,CAAO,EAErCJ,EAAI,iBAAiB,QAASc,GAAS,CACrC,MAAMC,EAAa,YAAY,IAAM,CACnCD,EAAM,eAAc,EACpB,IAAIE,EAAiBb,EAAmB,IAAI,KAG5C,GAFAF,EAAM,SAAW,GAEbe,EAAiB,EAAG,CACtBhB,EAAI,SAAW,GACfC,EAAM,SAAW,GACjB,cAAcc,CAAU,EACxB,MACD,CACD,MAAME,EAAQV,EAAUS,CAAc,EAEtCd,EAAM,CAAC,EAAE,UAAYe,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC1Df,EAAM,CAAC,EAAE,UAAYe,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC3Df,EAAM,CAAC,EAAE,UAAYe,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC7Df,EAAM,CAAC,EAAE,UAAYe,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAC9D,EAAE,GAAI,CACT,CAAC"}